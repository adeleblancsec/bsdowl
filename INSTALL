INSTALL -- Notes à propos de l'installation

Author: Michaël Le Barbier Grünewald
Date: Ven 10 fév 2006 16:50:40 GMT
Lang: fr_FR.ISO8859-1

$Id$


Dans ce qui suit on note `make' le nom du programme `BSD Make' sur le
système. Pour FreeBSD, il s'agit effectivement du binaire `make', pour
Mac OS-X il s'agit de `bsdmake', pour les autres systèmes (NetBSD et
les systèmes basés sur Linux), il s'agit de `bmake'.


  1 INSTALLATION DE BPS POUR L'UTILISATEUR
  2 INSTALLATION DE BMAKE POUR LES UTILISATEURS DE LINUX

1 INSTALLATION DE BPS POUR L'UTILISATEUR

Si vous n'êtes pas administrateur de la machine que vous utilisez, la
procédure d'installation de BPS est la suivante:
  -- copie des fichiers de directives dans un dossier approprié;
  -- paramétrisation du shell pour utiliser ces fichiers. 

1.1 Copie des fichiers de directives

Après avoir téléchargé la dernière version de BPS,

  http://download.gna.org/bsdmakepscripts/bsdmakepscripts-1.2.tar.bz2

et placé votre copie locale dans ~/distfiles, la procédure copiant les
fichiers de BPS est la suivante:

  tar xjf ~/distfiles/bsdmakepscripts-1.2.tar.bz2
  cd bsdmakepscripts-1.2
  ./configure --prefix=$HOME
  make all
  make install
  cd ..
  rm -Rf bsdmakepscripts-1.2

Si tout s'est bien passé, les fichiers de directives ont été installés
dans votre répertoire personnel. Sinon, voyez les conseils prodigués par 1.3.


1.2 Utilisation des fichiers

Pour utiliser les fichiers de directives, il faut explique à make où
les trouver. Cela peut se faire de plusieurs façons.

La première façon consiste à utiliser l'option `I' du programme, comme ceci:

  make -I${HOME}/share/mk

La seconde consiste à configurer le programme appelant make pour qu'il
place la liaison `MAKEFLAGS=-I${HOME}/share/mk' dans l'environnement
de make. Ce programme appelan est typiquement le shell de
l'utilisateur. Pour les shells de la famille sh, on ajoute les lignes

  MAKEFLAGS=${HOME}/share/mk
  export MAKEFLAGS

dans le fichier d'initialisation de l'environnement
(${HOME}/.profile). Pour les shells de la famille csh, on ajoute la
ligne

  setenv MAKEFLAGS ${HOME}/share/mk

au fichier ${HOME}/.cshrc ou ${HOME}/.tcshrc.


1.3 Si quelque chose a mal tourné

Si le déploiement de l'archive de distribution avec tar n'a pas
terminé correctement, il se peut que:
  -- votre version de tar ne comprenne pas l'option `j';
  -- votre système n'est pas apte à traiter la compression BZIP2.

Si votre commande tar ne comprend pas l'option `j', il se peut qu'une
autre version de tar, par exemple gtar (GNU tar), traitant
correctement cette option soit installée sur votre système. Si ce
n'est pas le cas, vous pouvez déployer l'archive en deux temps:

  bunzip2 ~/distfiles/bsdmakepscripts-1.2.tar.bz2
  tar xf ~/distfiles/bsdmakepscripts-1.2.tar

Si votre système n'est pas apte à traiter la compression BZIP2,
c'est-à-dire si vous ne pouvez pas trouver de commande bunzip2, vous
pouvez vous rabattre sur l'archive bsdmakepscripts-1.2.tar.gz.

Si le script `configure' ne termine pas correctement, envoyez-moi un
mail pour m'en avertir.



2 INSTALLATION DE BMAKE POUR LES UTILISATEURS DE LINUX

Utiliser `bmake' en environnement hostile nécessite de compiler et
d'installer `bmake' sous son répertoire personnel. Les étapes
suivantes peuvent être suivies pour réaliser ces deux opérations.

On télécharge les fichiers `bmake.tar.gz' et `mk.tar.gz' distribués
par leur auteur:

  http://void.crufty.net/ftp/pub/sjg/bmake.tar.gz
  http://void.crufty.net/ftp/pub/sjg/mk.tar.gz

La suite des indications suppose que ces fichiers ont été placés dans
le dossier ~/distfiles. On éxécute ensuite les commandes suivantes
depuis un dossier de travail (par exemple un dossier temporaire, ou le
dossier personnel):

  $ tar xzf ~/distfiles/bmake.tar.gz
  $ tar xzfC ~/distfiles/mk.tar.gz bmake
  $ ./bmake/boot-strap --prefix=${HOME}

Le programme `bmake' est alors installé sous ${HOME}/bin et les
fichiers de directives qui l'accompagnent le sont sous
${HOME}/share/mk. On peut alors se débarasser du dossier de travail
`bmake' avec la commande:

  $ rm -Rf bmake

Après cette installation de bmake, on utilisera aussi le préfixe
${HOME} pour l'installation de BSD Make Pallas Scripts.

Le programme `bmake' est très portable, cependant sur certains
systèmes seule une version récente de GCC (ultérieure à 3.6) arrive à
compiler `bmake'.
